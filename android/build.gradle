import com.android.ddmlib.DdmPreferences
import com.google.gms.googleservices.GoogleServicesPlugin

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.google.gms.oss.licenses.plugin'

android {
    compileSdkVersion Integer.parseInt(project.COMPILE_SDK)
    buildToolsVersion project.BUILD_TOOLS_VERSION

    signingConfigs {
        debug {
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storeFile file('/Users/wade/.android/debug.keystore')
            storePassword 'android'
        }
        release {
            keyAlias 'morristech'
            keyPassword '8juventus6'
            storeFile file('/Users/wade/Developer/repo/keystores/mt_dev.jks')
            storePassword '8juventus6'
        }
    }

    defaultConfig {
        applicationId "za.co.morristech.memo.android"
        minSdkVersion 19
        targetSdkVersion Integer.parseInt(project.TARGET_SDK)
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        resConfigs "en"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            minifyEnabled false  // don't shrink
            useProguard false   // don't obfuscate
            signingConfig signingConfigs.debug
            debuggable true
            jniDebuggable true
            pseudoLocalesEnabled true

            ext.alwaysUpdateBuildId = false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            testCoverageEnabled false
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            pseudoLocalesEnabled false
            zipAlignEnabled true
            crunchPngs false
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        encoding 'UTF-8'
        //incremental = false
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    // set timeouts to 10 minutes to prevent random failures
    DdmPreferences.setTimeOut(600000)
    adbOptions {
        timeOutInMs 600000
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //noinspection GradleCompatible
    implementation ("com.android.support:appcompat-v7:${project.ANDROID_SUPPORT_VERSION}", {
        force = true
    })
    implementation ("com.android.support:design:${project.ANDROID_SUPPORT_VERSION}", {
        force = true
    })
    implementation ("com.android.support.constraint:constraint-layout:1.1.3", {
        force = true
    })
    //======================= Firebase Dependencies ======================
    implementation "com.firebaseui:firebase-ui-auth:${project.FIREBASE_UI_VERSION}"
    implementation "com.google.firebase:firebase-core:${project.FIREBASE_CORE_VERSION}"
    implementation "com.google.firebase:firebase-auth:${project.FIREBASE_AUTH_VERSION}"
    implementation ("com.google.android.gms:play-services-auth:${project.PLAY_AUTH_VERSION}", {
        force = true
    })
    implementation "com.google.android.gms:play-services-oss-licenses:${project.PLAY_SERVICES_VERSION}"
    //implementation 'com.firebaseui:firebase-ui-auth:4.1.0'
    //======================= Thirparty Dependencies ======================
    implementation ('com.crashlytics.sdk.android:crashlytics:2.9.5', {
        transitive = true
    })
    testImplementation 'junit:junit:4.12'
    androidTestImplementation ('com.android.support.test:runner:1.0.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}

apply plugin: 'com.google.gms.google-services'
GoogleServicesPlugin.config.disableVersionCheck = true
