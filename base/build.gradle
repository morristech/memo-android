apply plugin: 'com.android.feature'

android {
    def newVersionCode = rootProject.ext.isDevBuild ? 100 : getVersionCodeTimestamp()

    compileSdkVersion Integer.parseInt(project.COMPILE_SDK)
    buildToolsVersion project.BUILD_TOOLS_VERSION
//    useLibrary 'org.apache.http.legacy'
    baseFeature true

    defaultConfig {
        minSdkVersion Integer.parseInt(project.MIN_SDK)
        targetSdkVersion Integer.parseInt(project.TARGET_SDK)
//        applicationId 'za.co.morristech.memo.app'
//        testApplicationId "za.co.morristech.memo.app.test"
        versionCode newVersionCode
        versionName project.VERSION_NAME
//      multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
//        if (rootProject.ext.isDevBuild) {
//            resConfigs("en", "es", "xhdpi")
//        } else {
            resConfigs "en"
//        }
        ndk {
            abiFilters "armeabi", "armeabi-v7a", "x86"
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
            jniDebuggable true
            pseudoLocalesEnabled true
        }
        release {
            minifyEnabled false
//            useProguard true
//            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testCoverageEnabled false
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            pseudoLocalesEnabled false
            zipAlignEnabled true
            crunchPngs false
        }
    }
}

dependencies {
    api 'com.android.support:appcompat-v7:28.0.0'
    api 'com.android.support.constraint:constraint-layout:1.1.3'
    application project(':app')
    feature project(':app')
}

static def getVersionCodeTimestamp() {

    def date = new Date()
    def formattedDate = date.format('yyDDDHHmm')
    def code = formattedDate.toInteger()
    println sprintf("VersionCode: %d", code)
    return code
}
